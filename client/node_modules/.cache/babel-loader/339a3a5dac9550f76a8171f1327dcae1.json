{"ast":null,"code":"import { takeLatest, put, all, call } from 'redux-saga/effects';\nimport UserActionTypes from './user.types';\nimport { signInSuccess, signInFailure } from './user.actions';\nimport { auth, googleProvider, createUserProfileDocument } from '../../firebase/firebase.utils';\nexport function* getSnapshotFromUserAuth(userAuth) {\n  try {\n    const userRef = yield call(createUserProfileDocument, userAuth);\n    const userSnapshot = yield userRef.get();\n    yield put(signInSuccess({\n      id: userSnapshot.id,\n      ...userSnapshot.data()\n    }));\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* signInWithGoogle() {\n  try {\n    const {\n      user\n    } = yield auth.signInWithPopup(googleProvider);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onGoogleSignInStart() {\n  yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START, signInWithGoogle);\n}\nexport function* signInWithEmail({\n  payload: {\n    email,\n    password\n  }\n}) {\n  try {\n    const {\n      user\n    } = yield auth.signInWithEmailAndPassword(email, password);\n    yield getSnapshotFromUserAuth(user);\n  } catch (error) {\n    yield put(signInFailure(error));\n  }\n}\nexport function* onEmailSignInStart() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* onCheckUserSession() {\n  yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START, signInWithEmail);\n}\nexport function* userSagas() {\n  yield all([call(onGoogleSignInStart), call(onEmailSignInStart)]);\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Programlama/Udemy Andrei yihua react 2/estore/farq-clothing/src/redux/user/user.sagas.js"],"names":["takeLatest","put","all","call","UserActionTypes","signInSuccess","signInFailure","auth","googleProvider","createUserProfileDocument","getSnapshotFromUserAuth","userAuth","userRef","userSnapshot","get","id","data","error","signInWithGoogle","user","signInWithPopup","onGoogleSignInStart","GOOGLE_SIGN_IN_START","signInWithEmail","payload","email","password","signInWithEmailAndPassword","onEmailSignInStart","EMAIL_SIGN_IN_START","onCheckUserSession","userSagas"],"mappings":"AAAA,SAAQA,UAAR,EAAmBC,GAAnB,EAAwBC,GAAxB,EAA4BC,IAA5B,QAAuC,oBAAvC;AAEA,OAAOC,eAAP,MAA4B,cAA5B;AAEA,SAAQC,aAAR,EAAuBC,aAAvB,QAA2C,gBAA3C;AAEA,SAAOC,IAAP,EAAaC,cAAb,EAA6BC,yBAA7B,QAA6D,+BAA7D;AAIA,OAAO,UAAUC,uBAAV,CAAkCC,QAAlC,EAA2C;AAC9C,MAAG;AACC,UAAMC,OAAO,GAAG,MAAMT,IAAI,CAACM,yBAAD,EAA2BE,QAA3B,CAA1B;AACA,UAAME,YAAY,GAAG,MAAMD,OAAO,CAACE,GAAR,EAA3B;AACA,UAAMb,GAAG,CACLI,aAAa,CAAC;AAACU,MAAAA,EAAE,EAACF,YAAY,CAACE,EAAjB;AAAoB,SAAGF,YAAY,CAACG,IAAb;AAAvB,KAAD,CADR,CAAT;AAGH,GAND,CAMC,OAAMC,KAAN,EAAY;AACT,UAAMhB,GAAG,CAACK,aAAa,CAACW,KAAD,CAAd,CAAT;AAEH;AAGJ;AACD,OAAO,UAAUC,gBAAV,GAA4B;AAC/B,MAAG;AACC,UAAM;AAAEC,MAAAA;AAAF,QAAW,MAAMZ,IAAI,CAACa,eAAL,CAAqBZ,cAArB,CAAvB;AACA,UAAME,uBAAuB,CAACS,IAAD,CAA7B;AACH,GAHD,CAGC,OAAMF,KAAN,EAAY;AACT,UAAMhB,GAAG,CAACK,aAAa,CAACW,KAAD,CAAd,CAAT;AAEH;AACJ;AAED,OAAO,UAAUI,mBAAV,GAA+B;AAClC,QAAMrB,UAAU,CAACI,eAAe,CAACkB,oBAAjB,EAAsCJ,gBAAtC,CAAhB;AAEH;AAED,OAAO,UAAUK,eAAV,CAA0B;AAACC,EAAAA,OAAO,EAAC;AAACC,IAAAA,KAAD;AAAOC,IAAAA;AAAP;AAAT,CAA1B,EAAqD;AACxD,MAAG;AACC,UAAK;AAACP,MAAAA;AAAD,QAAS,MAAMZ,IAAI,CAACoB,0BAAL,CAAgCF,KAAhC,EAAsCC,QAAtC,CAApB;AACA,UAAMhB,uBAAuB,CAACS,IAAD,CAA7B;AACH,GAHD,CAGC,OAAMF,KAAN,EAAY;AACT,UAAMhB,GAAG,CAACK,aAAa,CAACW,KAAD,CAAd,CAAT;AAEH;AACJ;AAED,OAAO,UAAUW,kBAAV,GAA8B;AACjC,QAAM5B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAqCN,eAArC,CAAhB;AACH;AAED,OAAO,UAAUO,kBAAV,GAA8B;AACjC,QAAM9B,UAAU,CAACI,eAAe,CAACyB,mBAAjB,EAAqCN,eAArC,CAAhB;AACH;AAED,OAAO,UAAUQ,SAAV,GAAqB;AACxB,QAAM7B,GAAG,CAAC,CAACC,IAAI,CAACkB,mBAAD,CAAL,EAA2BlB,IAAI,CAACyB,kBAAD,CAA/B,CAAD,CAAT;AACH","sourcesContent":["import {takeLatest,put, all,call} from 'redux-saga/effects';\r\n\r\nimport UserActionTypes from './user.types'\r\n\r\nimport {signInSuccess, signInFailure} from './user.actions'\r\n\r\nimport{auth, googleProvider, createUserProfileDocument} from '../../firebase/firebase.utils'\r\n\r\n\r\n\r\nexport function* getSnapshotFromUserAuth(userAuth){\r\n    try{\r\n        const userRef = yield call(createUserProfileDocument,userAuth);\r\n        const userSnapshot = yield userRef.get();\r\n        yield put(\r\n            signInSuccess({id:userSnapshot.id,...userSnapshot.data()})\r\n            )\r\n    }catch(error){\r\n        yield put(signInFailure(error));\r\n\r\n    }\r\n    \r\n\r\n}\r\nexport function* signInWithGoogle(){\r\n    try{\r\n        const { user } = yield auth.signInWithPopup(googleProvider);\r\n        yield getSnapshotFromUserAuth(user)\r\n    }catch(error){\r\n        yield put(signInFailure(error));\r\n\r\n    }\r\n}\r\n\r\nexport function* onGoogleSignInStart(){\r\n    yield takeLatest(UserActionTypes.GOOGLE_SIGN_IN_START,signInWithGoogle)\r\n\r\n}\r\n\r\nexport function* signInWithEmail({payload:{email,password}}){\r\n    try{\r\n        const{user} = yield auth.signInWithEmailAndPassword(email,password);\r\n        yield getSnapshotFromUserAuth(user);\r\n    }catch(error){\r\n        yield put(signInFailure(error))\r\n\r\n    }\r\n}\r\n\r\nexport function* onEmailSignInStart(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail)\r\n}\r\n\r\nexport function* onCheckUserSession(){\r\n    yield takeLatest(UserActionTypes.EMAIL_SIGN_IN_START,signInWithEmail)\r\n}\r\n\r\nexport function* userSagas(){\r\n    yield all([call(onGoogleSignInStart),call(onEmailSignInStart)])\r\n}"]},"metadata":{},"sourceType":"module"}