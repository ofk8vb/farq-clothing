{"ast":null,"code":"import { takeLatest, call, put } from 'redux-saga/effects';\nimport { firestore, convertCollectionsSnapshotToMap } from '../../firebase/firebase.utils';\nimport ShopActionTypes from './shop.types';\nimport { fetchCollectionsSuccess, fetchCollectionsFailure } from './shop.actions';\nexport function* fetchCollections() {\n  try {\n    const collectionRef = firestore.collection('collections');\n    const snapshot = yield collectionRef.get();\n    const collectionsMap = yield call(convertCollectionsSnapshotToMap, snapshot);\n    yield put(fetchCollectionsSuccess(collectionsMap));\n  } catch (error) {\n    yield put(fetchCollectionsFailure(error.message));\n  } //     collectionRef.get().then(snapshot =>{\n  //       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\n  //       dispatch(fetchCollectionsSuccess(collectionsMap))\n  //   })\n  //   .catch(error=>dispatch(fetchCollectionsFailure(error)))\n\n}\nexport function* fetchCollectionsStart() {\n  yield takeLatest(ShopActionTypes.FETCH_COLLECTIONS_START, fetchCollections);\n}","map":{"version":3,"sources":["C:/Users/Admin/Desktop/Programlama/Udemy Andrei yihua react 2/estore/farq-clothing/src/redux/shop/shop.sagas.js"],"names":["takeLatest","call","put","firestore","convertCollectionsSnapshotToMap","ShopActionTypes","fetchCollectionsSuccess","fetchCollectionsFailure","fetchCollections","collectionRef","collection","snapshot","get","collectionsMap","error","message","fetchCollectionsStart","FETCH_COLLECTIONS_START"],"mappings":"AAAA,SAAQA,UAAR,EAAmBC,IAAnB,EAAwBC,GAAxB,QAAkC,oBAAlC;AACA,SAAQC,SAAR,EAAkBC,+BAAlB,QAAwD,+BAAxD;AACA,OAAOC,eAAP,MAA4B,cAA5B;AACA,SAAQC,uBAAR,EAAgCC,uBAAhC,QAA8D,gBAA9D;AAGA,OAAO,UAAUC,gBAAV,GAA4B;AAE/B,MAAG;AACC,UAAMC,aAAa,GAAGN,SAAS,CAACO,UAAV,CAAqB,aAArB,CAAtB;AACA,UAAMC,QAAQ,GAAG,MAAMF,aAAa,CAACG,GAAd,EAAvB;AACA,UAAMC,cAAc,GAAG,MAAMZ,IAAI,CAACG,+BAAD,EAAiCO,QAAjC,CAAjC;AACA,UAAMT,GAAG,CAACI,uBAAuB,CAACO,cAAD,CAAxB,CAAT;AACH,GALD,CAKC,OAAMC,KAAN,EAAY;AACT,UAAMZ,GAAG,CAACK,uBAAuB,CAACO,KAAK,CAACC,OAAP,CAAxB,CAAT;AAEH,GAV8B,CAiBnC;AACA;AACA;AACA;AACA;;AAEC;AAGD,OAAO,UAAUC,qBAAV,GAAiC;AACpC,QAAMhB,UAAU,CACZK,eAAe,CAACY,uBADJ,EAEZT,gBAFY,CAAhB;AAIH","sourcesContent":["import {takeLatest,call,put} from 'redux-saga/effects';\r\nimport {firestore,convertCollectionsSnapshotToMap} from '../../firebase/firebase.utils'\r\nimport ShopActionTypes from './shop.types';\r\nimport {fetchCollectionsSuccess,fetchCollectionsFailure} from './shop.actions'\r\n\r\n\r\nexport function* fetchCollections(){\r\n\r\n    try{\r\n        const collectionRef = firestore.collection('collections');\r\n        const snapshot = yield collectionRef.get();\r\n        const collectionsMap = yield call(convertCollectionsSnapshotToMap,snapshot)\r\n        yield put(fetchCollectionsSuccess(collectionsMap))\r\n    }catch(error){\r\n        yield put(fetchCollectionsFailure(error.message))\r\n\r\n    }\r\n\r\n    \r\n\r\n\r\n\r\n\r\n//     collectionRef.get().then(snapshot =>{\r\n//       const collectionsMap = convertCollectionsSnapshotToMap(snapshot);\r\n//       dispatch(fetchCollectionsSuccess(collectionsMap))\r\n//   })\r\n//   .catch(error=>dispatch(fetchCollectionsFailure(error)))\r\n\r\n}\r\n\r\n\r\nexport function* fetchCollectionsStart(){\r\n    yield takeLatest(\r\n        ShopActionTypes.FETCH_COLLECTIONS_START,\r\n        fetchCollections\r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}